// models/User.js
import mongoose from "mongoose";

const userSchema = new mongoose.Schema({
        username: {
            type: String,
            required: [true, "T√™n ng∆∞·ªùi d√πng l√† b·∫Øt bu·ªôc"],
            unique: true,
            trim: true,
        },

        email: {
            type: String,
            required: [true, "Email l√† b·∫Øt bu·ªôc"],
            unique: true,
            lowercase: true,
            match: [/^\S+@\S+\.\S+$/, "Email kh√¥ng h·ª£p l·ªá"],
        },

        password: {
            type: String,
            required: [true, "M·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc"],
            minlength: [6, "M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±"],
        },

        avatar: {
            type: String,
            default: "https://i.pravatar.cc/150?u=default",
        },

        bio: {
            type: String,
            default: "",
            maxlength: 200,
        },

        friends: [{
            type: mongoose.Schema.Types.ObjectId,
            ref: "User",
        }, ],

        friendRequests: [{
            type: mongoose.Schema.Types.ObjectId,
            ref: "User",
        }, ],

        // üîÅ D√πng cho ch·ª©c nƒÉng reset m·∫≠t kh·∫©u
        resetToken: String,
        resetTokenExpire: Date,
    }, { timestamps: true } // T·ª± ƒë·ªông th√™m createdAt, updatedAt
);

// üß© Index ƒë·ªÉ t√¨m ki·∫øm nhanh theo email v√† username
userSchema.index({ email: 1, username: 1 });

// üß± T·∫°o model
const User = mongoose.model("User", userSchema);

export default User;